name: "Terraform Workflow"

on:
  workflow_call:
    inputs:
      destroy:
        type: boolean
        required: true
        default: false
      

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        # working-directory: ./terraform

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        # with:
        #   path: ./terraform
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHub_AWS_OIDC
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE_ARN }}
          aws-region: ${{ env.aws-region }}          

      - name: Terraform Init
        id: init  
        run: terraform init -backend-config="./envs/${{ env.TF_WORKSPACE }}/backend.conf"
        continue-on-error: false

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true        

      - name: Terraform Validate
        id: validate
        run: terraform validate
        continue-on-error: true 

      - name: Terraform Destroy
        if: ${{ inputs.destroy == true }}
        id: destroy
        run: terraform plan -destroy

      - name: Terraform Plan
        if: ${{ inputs.destroy != true && github.event_name == 'pull_request'}}
        id: plan
        run: terraform plan -out plan.tf -no-color     

      - name: Terraform Apply
        if: ${{ inputs.destroy != true && github.event_name == 'push'}} 
        id: apply
        run: terraform apply plan.tf