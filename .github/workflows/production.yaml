name: "Infra Production"

on:
  push:
    branches:
    - main
    paths:
    - terraform/**
  pull_request:
    branches:
    - main
    paths:
    - terraform/**

env:
  TF_WORKSPACE: "prod"
  aws-region: "us-east-1"

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  Deploy:
    name: Terraform Infra Developer
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHub_AWS_OIDC
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE_ARN }}
          aws-region: ${{ env.aws-region }}
        
      - name: Terraform Apply
        uses: ./.github/workflows/workflow.yaml

      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `### Terraform Plan ⚙️\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${{ steps.plan.outputs.stdout }}
            \`\`\`

            </details>`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Resouces List
        uses: borchero/terraform-plan-comment@v2
        if: github.event_name == 'pull_request'
        with:
          token: ${{ github.token }}
          planfile: plan.tf
          working-directory: ./terraform
















      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v3.1.2
      #   with:
      #     terraform_version: "1.9.5"

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-session-name: GitHub_AWS_Federated_OIDC
      #     role-to-assume: ${{ vars.AWS_ASSUME_ROLE_ARN }}
      #     aws-region: ${{ env.aws-region }}          
      
      # - name: Terraform fmt      
      #   id: fmt
      #   run: terraform fmt -check
      #   continue-on-error: true

      # - name: Terraform Init
      #   id: init
      #   run: terraform init -backend-config="./envs/${{ env.TF_WORKSPACE }}/backend.conf"

      # - name: Terraform Validate
      #   id: validate
      #   run: terraform validate -no-color
      #   continue-on-error: true

      # - name: Terraform Plan
      #   if: github.event_name == 'pull_request'
      #   id: plan
      #   run: terraform plan -out plan.tf -no-color
          
      # - uses: actions/github-script@v7
      #   if: github.event_name == 'pull_request'
      #   with:
      #     script: |
      #       const output = `### Terraform Plan ⚙️\`${{ steps.plan.outcome }}\`

      #       <details><summary>Show Plan</summary>

      #       \`\`\`\n
      #       ${{ steps.plan.outputs.stdout }}
      #       \`\`\`

      #       </details>`

      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })

      # - name: Terraform Resouces List
      #   uses: borchero/terraform-plan-comment@v2
      #   if: github.event_name == 'pull_request'
      #   with:
      #     token: ${{ github.token }}
      #     planfile: plan.tf
      #     working-directory: ./terraform
            
      # - name: Terraform Plan Status
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1
  
      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/developer' && github.event_name == 'push'
      #   run: terraform apply -auto-approve plan.tf

  
