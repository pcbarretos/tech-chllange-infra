name: "Terraform Developer"

on:
  push:
    branches:
    - developer
    paths:
    - terraform/**
  pull_request:
    branches:
    - developer
    paths:
    - terraform/**

env:
  TF_WORKSPACE: "dev"
  aws-region: "us-east-1"
  destroy: false

permissions:
  contents: read
  id-token: write
  pull-requests: write      

jobs:
  Terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHub_AWS_OIDC
          aws-region: ${{ env.aws-region }}
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE_ARN }}      

      - name: Terraform Init
        id: init  
        run: terraform init -backend-config="./envs/${{ env.TF_WORKSPACE }}/backend.conf"
        continue-on-error: false

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true        

      - name: Terraform Validate
        id: validate
        run: terraform validate
        continue-on-error: true 

      - name: Terraform Destroy
        if: ${{ env.destroy == true }}
        id: destroy
        run: terraform plan -destroy -var-file=./envs/${{ env.TF_WORKSPACE }}/terraform.tfvars"

      - name: Terraform Plan
        if: ${{ env.destroy != true && github.event_name == 'pull_request'}}
        id: plan
        run: terraform plan -out plan.tf -var-file="./envs/${{ env.TF_WORKSPACE }}/terraform.tfvars" -no-color 

      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `### Terraform Plan ⚙️\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${{ steps.plan.outputs.stdout }}
            \`\`\`

            </details>`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Resouces List
        uses: borchero/terraform-plan-comment@v2
        if: github.event_name == 'pull_request'
        with:
          token: ${{ github.token }}
          planfile: plan.tf
          working-directory: ./terraform

      - name: Terraform Apply
        if: ${{ env.destroy != true && github.event_name == 'push'}} 
        id: apply
        run: terraform apply plan.tf -var-file="./envs/${{ env.TF_WORKSPACE }}/terraform.tfvars"