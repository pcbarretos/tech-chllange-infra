name: "Infra Developer"

on:
  push:
    branches:
    - developer
    paths:
    - terraform/**
  pull_request:
    branches:
    - developer
    paths:
    - terraform/**

env:
  TF_WORKSPACE: "dev"  
  aws-region: "us-east-1"

jobs:
  PlanInfraDev:
    name: Plan Infra Developer
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3       
        with:
          terraform_version: "1.9.5"
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHub_AWS_Federated_OIDC
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE_ARN }}
          aws-region: ${{ env.aws-region }}          
      
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="./envs/${{ env.TF_WORKSPACE }}/backend.conf"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: true

      - name: Terraform Plan
        id: plan
        run: terraform plan -out plan.tf

        
      - name: Post PR comment
        uses: borchero/terraform-plan-comment@v2
        with:
          token: ${{ github.token }}
          planfile: plan.tf
          working-directory: ./terraform

          
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
  
            <details><summary>Show Plan</summary>
  
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
  
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
  
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
  
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
  
      - name: Terraform Apply
        if: github.ref == 'refs/heads/developer' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

      # - name: Upload Plan          
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: plan.tf
      #     path: ./plan.tf
  
